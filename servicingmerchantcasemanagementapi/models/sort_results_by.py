# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from servicingmerchantcasemanagementapi.api_helper import APIHelper


class SortResultsBy(object):

    """Implementation of the 'SortResultsBy' model.

    Use for filtering search results.

    Attributes:
        field_name (str): Field name to be used for sorting purposes.
        order_by (OrderByEnum): Order search results in ascnding or descending
            order.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_name": 'fieldName',
        "order_by": 'orderBy'
    }

    _optionals = [
        'field_name',
        'order_by',
    ]

    def __init__(self,
                 field_name=APIHelper.SKIP,
                 order_by='ASC'):
        """Constructor for the SortResultsBy class"""

        # Initialize members of the class
        if field_name is not APIHelper.SKIP:
            self.field_name = field_name 
        self.order_by = order_by 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_name = dictionary.get("fieldName") if dictionary.get("fieldName") else APIHelper.SKIP
        order_by = dictionary.get("orderBy") if dictionary.get("orderBy") else 'ASC'
        # Return an object of this model
        return cls(field_name,
                   order_by)

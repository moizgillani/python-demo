# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from servicingmerchantcasemanagementapi.api_helper import APIHelper


class GetCaseCategoryTypesResponse(object):

    """Implementation of the 'GetCaseCategoryTypesResponse' model.

    List of case types for a specific case category from WolrdPay will be
    returned in the response

    Attributes:
        category (str): Case Category. High level grouping of case types.
        case_types (List[str]): List of applicable case types for case
            category.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "category": 'category',
        "case_types": 'caseTypes'
    }

    _optionals = [
        'category',
        'case_types',
    ]

    def __init__(self,
                 category=APIHelper.SKIP,
                 case_types=APIHelper.SKIP):
        """Constructor for the GetCaseCategoryTypesResponse class"""

        # Initialize members of the class
        if category is not APIHelper.SKIP:
            self.category = category 
        if case_types is not APIHelper.SKIP:
            self.case_types = case_types 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        category = dictionary.get("category") if dictionary.get("category") else APIHelper.SKIP
        case_types = dictionary.get("caseTypes") if dictionary.get("caseTypes") else APIHelper.SKIP
        # Return an object of this model
        return cls(category,
                   case_types)

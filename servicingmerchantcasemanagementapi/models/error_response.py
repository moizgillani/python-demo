# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from servicingmerchantcasemanagementapi.api_helper import APIHelper


class ErrorResponse(object):

    """Implementation of the 'ErrorResponse' model.

    TODO: type model description here.

    Attributes:
        correlation_id (str): Worldpay generated Correlation Id
        error_code (str): Error code
        error_message (str): Error message

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "error_message": 'errorMessage',
        "correlation_id": 'correlationId',
        "error_code": 'errorCode'
    }

    _optionals = [
        'correlation_id',
        'error_code',
    ]

    def __init__(self,
                 error_message=None,
                 correlation_id=APIHelper.SKIP,
                 error_code=APIHelper.SKIP):
        """Constructor for the ErrorResponse class"""

        # Initialize members of the class
        if correlation_id is not APIHelper.SKIP:
            self.correlation_id = correlation_id 
        if error_code is not APIHelper.SKIP:
            self.error_code = error_code 
        self.error_message = error_message 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        error_message = dictionary.get("errorMessage") if dictionary.get("errorMessage") else None
        correlation_id = dictionary.get("correlationId") if dictionary.get("correlationId") else APIHelper.SKIP
        error_code = dictionary.get("errorCode") if dictionary.get("errorCode") else APIHelper.SKIP
        # Return an object of this model
        return cls(error_message,
                   correlation_id,
                   error_code)

# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from servicingmerchantcasemanagementapi.api_helper import APIHelper


class EntityInfo(object):

    """Implementation of the 'EntityInfo' model.

    TODO: type model description here.

    Attributes:
        entity_value (str): Unique identifier of the entity
        entity_type (EntityTypeEnum): Type of the entity, Required for US
            entities

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "entity_value": 'entityValue',
        "entity_type": 'entityType'
    }

    _optionals = [
        'entity_type',
    ]

    def __init__(self,
                 entity_value=None,
                 entity_type=APIHelper.SKIP):
        """Constructor for the EntityInfo class"""

        # Initialize members of the class
        self.entity_value = entity_value 
        if entity_type is not APIHelper.SKIP:
            self.entity_type = entity_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        entity_value = dictionary.get("entityValue") if dictionary.get("entityValue") else None
        entity_type = dictionary.get("entityType") if dictionary.get("entityType") else APIHelper.SKIP
        # Return an object of this model
        return cls(entity_value,
                   entity_type)

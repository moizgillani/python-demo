# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from servicingmerchantcasemanagementapi.api_helper import APIHelper
from servicingmerchantcasemanagementapi.configuration import Server
from servicingmerchantcasemanagementapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from servicingmerchantcasemanagementapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from servicingmerchantcasemanagementapi.models.get_case_categories_response import GetCaseCategoriesResponse
from servicingmerchantcasemanagementapi.models.get_case_category_types_response import GetCaseCategoryTypesResponse
from servicingmerchantcasemanagementapi.models.get_case_reasons_response import GetCaseReasonsResponse
from servicingmerchantcasemanagementapi.exceptions.error_exception import ErrorException


class LookupController(BaseController):

    """A Controller to access Endpoints in the servicingmerchantcasemanagementapi API."""
    def __init__(self, config):
        super(LookupController, self).__init__(config)

    def get_case_categories(self,
                            v_correlation_id=None,
                            country=None):
        """Does a GET request to /lookup/categories.

        Get list of all active case categories from WolrdPay.

        Args:
            v_correlation_id (uuid|str, optional): Correlation Id
            country (CountryEnum, optional): country for retrieveing the
                categories, default is US if nothing is passed

        Returns:
            GetCaseCategoriesResponse: Response from the API. Ok

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/lookup/categories')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .query_param(Parameter()
                         .key('country')
                         .value(country))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetCaseCategoriesResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

    def get_case_category_types(self,
                                v_correlation_id=None,
                                category=None):
        """Does a GET request to /lookup/categories/casetypes.

        Retrieve list of case types for specific case category with WolrdPay

        Args:
            v_correlation_id (uuid|str, optional): Correlation Id
            category (str, optional): Case category. High level grouping of
                case types.

        Returns:
            GetCaseCategoryTypesResponse: Response from the API. Ok

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/lookup/categories/casetypes')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .query_param(Parameter()
                         .key('category')
                         .value(category))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetCaseCategoryTypesResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

    def get_case_reasons(self,
                         v_correlation_id=None):
        """Does a GET request to /lookup/reasons.

        Retrieve list of all case reasons from WolrdPay.

        Args:
            v_correlation_id (uuid|str, optional): Correlation Id

        Returns:
            GetCaseReasonsResponse: Response from the API. Ok

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/lookup/reasons')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetCaseReasonsResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

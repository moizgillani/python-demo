# -*- coding: utf-8 -*-

"""
servicingmerchantcasemanagementapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from servicingmerchantcasemanagementapi.api_helper import APIHelper
from servicingmerchantcasemanagementapi.configuration import Server
from servicingmerchantcasemanagementapi.utilities.file_wrapper import FileWrapper
from servicingmerchantcasemanagementapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from servicingmerchantcasemanagementapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from servicingmerchantcasemanagementapi.models.create_case_response import CreateCaseResponse
from servicingmerchantcasemanagementapi.models.get_case_details_response_data import GetCaseDetailsResponseData
from servicingmerchantcasemanagementapi.models.search_cases_response import SearchCasesResponse
from servicingmerchantcasemanagementapi.models.get_attachment_response import GetAttachmentResponse
from servicingmerchantcasemanagementapi.exceptions.error_exception import ErrorException


class CaseController(BaseController):

    """A Controller to access Endpoints in the servicingmerchantcasemanagementapi API."""
    def __init__(self, config):
        super(CaseController, self).__init__(config)

    def create_case(self,
                    v_correlation_id=None,
                    body=None):
        """Does a POST request to /cases.

        Create a new case in service cloud

        Args:
            v_correlation_id (uuid|str, optional): Correlation Id
            body (CreateCaseRequest, optional): TODO: type description here.

        Returns:
            CreateCaseResponse: Response from the API. Created

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CreateCaseResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

    def update_case(self,
                    case_number,
                    v_correlation_id=None,
                    body=None):
        """Does a POST request to /cases/{caseNumber}/comments.

        Add comments for an existing service request case present with
        Worldpay.

        Args:
            case_number (str): Unique number assigned to the case (Auto
                generated once case is created)
            v_correlation_id (uuid|str, optional): Correlation Id
            body (CreateCommentRequest, optional): TODO: type description
                here.

        Returns:
            void: Response from the API. Created

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases/{caseNumber}/comments')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('caseNumber')
                            .value(case_number)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .body_param(Parameter()
                        .value(body))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).execute()

    def get_case_details(self,
                         case_number,
                         v_correlation_id=None):
        """Does a GET request to /cases/{caseNumber}.

        Retrieve details for a specific service request case submitted with
        Worldpay.

        Args:
            case_number (str): Unique number assigned to the case (Auto
                generated once case is created)
            v_correlation_id (uuid|str, optional): Correlation Id

        Returns:
            GetCaseDetailsResponseData: Response from the API. Ok

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases/{caseNumber}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('caseNumber')
                            .value(case_number)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetCaseDetailsResponseData.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

    def search_cases(self,
                     v_correlation_id=None,
                     body=None):
        """Does a POST request to /cases/search.

        Search for service request cases  based on search parameters with
        Worldpay.

        Args:
            v_correlation_id (uuid|str, optional): Correlation Id
            body (SearchCasesRequest, optional): TODO: type description here.

        Returns:
            SearchCasesResponse: Response from the API. Success

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases/search')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SearchCasesResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()

    def create_attachments(self,
                           case_number,
                           v_correlation_id=None,
                           file=None):
        """Does a POST request to /cases/{caseNumber}/attachments.

        Attach attachments for an existing service request case present with
        WorldPay.

        Args:
            case_number (str): Unique number assigned to the case (Auto
                generated once case is created)
            v_correlation_id (uuid|str, optional): Correlation Id
            file (typing.BinaryIO, optional): Attachment file

        Returns:
            void: Response from the API. Created

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases/{caseNumber}/attachments')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('caseNumber')
                            .value(case_number)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .multipart_param(Parameter()
                             .key('file')
                             .value(file)
                             .default_content_type('application/octet-stream'))
            .auth(Single('global'))
        ).execute()

    def get_attachments(self,
                        case_number,
                        attachment_id,
                        v_correlation_id=None):
        """Does a GET request to /cases/{caseNumber}/attachments/{attachmentId}.

        Retrieve attachment of a case by attachment identifier with Worldpay.

        Args:
            case_number (str): Case Number associated with the attachment
            attachment_id (str): Attachment identifier for the file
            v_correlation_id (uuid|str, optional): Correlation Id

        Returns:
            GetAttachmentResponse: Response from the API. Ok

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/cases/{caseNumber}/attachments/{attachmentId}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('caseNumber')
                            .value(case_number)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('attachmentId')
                            .value(attachment_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('v-correlation-id')
                          .value(v_correlation_id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetAttachmentResponse.from_dictionary)
            .local_error('default', 'Default errors', ErrorException)
        ).execute()
